<ruleset name="Custom ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>
        Ruleset applied for this project
    </description>

    <rule ref="category/java/errorprone.xml">
        <exclude name="BeanMembersShouldSerialize"/>
        <exclude name="DataflowAnomalyAnalysis"/>
        <exclude name="AvoidFieldNameMatchingMethodName"/>
        <exclude name="UseLocaleWithCaseConversions"/>
        <exclude name="LoggerIsNotStaticFinal"/>
        <exclude name="AvoidFieldNameMatchingTypeName"/>
        <exclude name="AvoidDuplicateLiterals"/>
        <exclude name="JUnitSpelling"/>
        <exclude name="MissingSerialVersionUID"/>
        <exclude name="ConstructorCallsOverridableMethod"/>
    </rule>

    <rule ref="category/java/bestpractices.xml">
        <exclude name="JUnitAssertionsShouldIncludeMessage"/>
        <exclude name="JUnitTestContainsTooManyAsserts"/>
        <exclude name="JUnitTestsShouldIncludeAssert"/>
        <exclude name="UseAssertSameInsteadOfAssertTrue"/>
        <exclude name="JUnit4TestShouldUseTestAnnotation"/>
    </rule>

    <rule ref="category/java/codestyle.xml">
        <exclude name="AtLeastOneConstructor"/>
        <exclude name="CommentDefaultAccessModifier"/>
        <exclude name="CallSuperInConstructor"/>
        <exclude name="OnlyOneReturn"/>
        <exclude name="DefaultPackage"/>
        <exclude name="UnnecessaryAnnotationValueElement"/>
        <exclude name="ConfusingTernary"/>
        <exclude name="LinguisticNaming"/>
        <exclude name="ShortClassName"/>
        <exclude name="GenericsNaming"/>
        <exclude name="AvoidFinalLocalVariable"/>
        <exclude name="MethodNamingConventions"/>
        <exclude name="TooManyStaticImports"/>
        <exclude name="UnnecessaryFullyQualifiedName"/>
        <exclude name="ClassNamingConventions"/>
        <exclude name="MethodArgumentCouldBeFinal"/>

    </rule>

    <rule ref="category/java/codestyle.xml/ShortVariable">
        <properties>
            <property name="xpath">
                <value>
                    //VariableDeclaratorId[(string-length(@Name) &lt; 3) and (not (@Name='id'))
                    and (not (@Name='ts'))
                    and (not (@Name='cm'))
                    and (not (@Name='ok'))
                    and (not (@Name='o'))
                    and (not (@Name='db')) ]
                    [not(ancestor::ForInit)]
                    [not((ancestor::FormalParameter) and (ancestor::TryStatement))]
                </value>
            </property>
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml/ControlStatementBraces">
        <properties>
            <property name="checkIfElseStmt" value="true" />
            <property name="checkSingleIfStmt" value="false" />
            <property name="checkWhileStmt" value="true" />
            <property name="checkForStmt" value="true" />
            <property name="checkDoWhileStmt" value="true" />
            <property name="checkCaseStmt" value="false" />
            <property name="allowEmptyLoop" value="false" />
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml/LongVariable">
        <properties>
            <!-- Nothing bad with the long and descriptive variable names if only they fit the line,
            but still keep it reasonable. -->
            <property name="minimum" value="40"/>
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml/ShortMethodName">
        <properties>
            <property name="minimum" value="2" />
        </properties>
    </rule>


    <rule ref="category/java/design.xml">
        <exclude name="LawOfDemeter"/>
        <exclude name="LoosePackageCoupling"/>
        <exclude name="DataClass"/>
        <exclude name="TooManyMethods"/>
        <exclude name="TooManyFields"/>
        <exclude name="ExcessiveImports"/>
        <exclude name="AvoidCatchingGenericException"/>
        <exclude name="AvoidUncheckedExceptionsInSignatures"/>
        <exclude name="ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
        <exclude name="UseUtilityClass"/>
    </rule>

    <rule ref="category/java/design.xml/CyclomaticComplexity">
        <properties>
            <property name="classReportLevel" value="80" />
            <property name="methodReportLevel" value="25" />
            <property name="cycloOptions" value="" />
        </properties>
    </rule>

    <rule ref="category/java/design.xml/SignatureDeclareThrowsException">
        <properties>
            <property name="IgnoreJUnitCompletely" value="true" />
        </properties>
    </rule>


    <rule ref="category/java/codestyle.xml/FieldNamingConventions">
        <properties>
            <property name="publicConstantPattern" value="[A-Z][A-Z_0-9]*" />
            <property name="constantPattern" value="[A-Z][A-Z_0-9]*" />
            <property name="enumConstantPattern" value="[a-zA-Z0-9_]*" />
            <property name="finalFieldPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="staticFieldPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="defaultFieldPattern" value="[a-z][a-zA-Z0-9]*" />
            <property name="exclusions" value="serialVersionUID|serialPersistentFields" />
        </properties>
    </rule>
</ruleset>
